/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stats;

import java.util.ArrayList;
import java.util.Random;

/**
 *
 * @author Kenneth Robertson and Andrew McAninch
 */
public class StatsFrame extends javax.swing.JFrame {

    /**
     * Creates new form StatsFrame
     */
    public StatsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        histogramPanel = new stats.HistogramPanel();
        runUniformButton = new javax.swing.JButton();
        runExpButton = new javax.swing.JButton();
        outputScrollPane = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        clearButton = new javax.swing.JButton();
        numberOfClassesTextField = new javax.swing.JTextField();
        numberOfClassesLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        histogramPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout histogramPanelLayout = new javax.swing.GroupLayout(histogramPanel);
        histogramPanel.setLayout(histogramPanelLayout);
        histogramPanelLayout.setHorizontalGroup(
            histogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        histogramPanelLayout.setVerticalGroup(
            histogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        runUniformButton.setText("Run U(-3,6) Test");
        runUniformButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runUniformButtonActionPerformed(evt);
            }
        });

        runExpButton.setText("Run Exp(.2=lambda) Test");
        runExpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runExpButtonActionPerformed(evt);
            }
        });

        outputTextArea.setEditable(false);
        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        outputScrollPane.setViewportView(outputTextArea);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        numberOfClassesTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        numberOfClassesTextField.setText("20");
        numberOfClassesTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                numberOfClassesTextFieldFocusLost(evt);
            }
        });

        numberOfClassesLabel.setText("Number of Classes:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(runExpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(runUniformButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numberOfClassesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberOfClassesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(histogramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(histogramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(runUniformButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(runExpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfClassesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfClassesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearButton))
                    .addComponent(outputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Runs the uniform test when the uniform test button is hit
    private void runUniformButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runUniformButtonActionPerformed
        ArrayList<Double> uniformMeans = new ArrayList<Double>();
        Random rand = new Random();
        double currentTotal = 0;
        double probabilityBetweenOneAndTwo = 0.0d;
        double meanOfMeans = 0.0d;
        double stdDevMeans = 0.0d;
        
        //Generate 100 means
        for(int i = 0; i < 100; i++)
        {
            //Collect 255 random numbers between 6 and 3
            for(int j = 0; j < 255; j++)
                currentTotal += rand.nextDouble()*9.0d - 3.0d;
            
            currentTotal = currentTotal / 255.0d; //currentTotal becomes current mean
            uniformMeans.add(currentTotal); //Add to uniformMeans

            //Check if mean is between 1 and 2
            if(currentTotal < 2.0d && currentTotal > 1.0d) probabilityBetweenOneAndTwo++;
            meanOfMeans += currentTotal;
            
            currentTotal = 0;
        }
        
        probabilityBetweenOneAndTwo /= 100.0d;
        meanOfMeans /= 100.0d;
        
        //Find std deviation of Means using sqrt(RiemannSum((Xi - avgX)^2)/(n-1))
        for(int i = 0; i < 100; i++)
            stdDevMeans += Math.pow(uniformMeans.get(i)-meanOfMeans,2);
        
        stdDevMeans = Math.sqrt(stdDevMeans/99.0d);
        
        //Output results to text area
        this.outputTextArea.setText(this.outputTextArea.getText()+
                "The simulated probability of U(-3,6) has a mean between 1 and 2 is "+probabilityBetweenOneAndTwo+"\n"+
                "The mean of 100 means taken from 255 samples of U(-3,6) is "+meanOfMeans+"\n"+
                "The standard devation of the means of U(-3,6) is "+stdDevMeans+"\n\n");
        
        //Draw histogram of means
        ((HistogramPanel)this.histogramPanel).drawHistogram(
                Integer.parseUnsignedInt(this.numberOfClassesTextField.getText()), uniformMeans);
    }//GEN-LAST:event_runUniformButtonActionPerformed

    private void numberOfClassesTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numberOfClassesTextFieldFocusLost
        try
        {
            Integer.parseUnsignedInt(this.numberOfClassesTextField.getText());
        }
        catch(NumberFormatException e)
        {
            this.numberOfClassesTextField.setText("20");
        }
    }//GEN-LAST:event_numberOfClassesTextFieldFocusLost

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        this.outputTextArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void runExpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runExpButtonActionPerformed
        ArrayList<Double> exponentialMeans = new ArrayList<Double>();
        Random rand = new Random();
        double currentTotal = 0;
        double probabilityBetweenThreeAndFive = 0.0d;
        double meanOfMeans = 0.0d;
        double stdDevMeans = 0.0d;
        
        //Generate 400 means
        for(int i = 0; i < 400; i++)
        {
            //Collect 625 random numbers from the exponential distribution using
            //(-1/lambda)*ln(1-x) where x is a random number between 0 and 1
            for(int j = 0; j < 625; j++)
                currentTotal += (-1.0/.2d)*Math.log(1.0d-rand.nextDouble());
            
            currentTotal = currentTotal / 625.0d; //currentTotal becomes current mean
            exponentialMeans.add(currentTotal);

            //Check if mean is between 3 and 5
            if(currentTotal < 5.0d && currentTotal > 3.0d) probabilityBetweenThreeAndFive++;
            meanOfMeans += currentTotal;
            
            currentTotal = 0;
        }
        
        probabilityBetweenThreeAndFive /= 400.0d;
        meanOfMeans /= 400.0d;
        
        //Find std deviation of Means using sqrt(RiemannSum((Xi - avgX)^2)/(n-1))
        for(int i = 0; i < 400; i++)
            stdDevMeans += Math.pow(exponentialMeans.get(i)-meanOfMeans,2);
        
        stdDevMeans = Math.sqrt(stdDevMeans/399.0d);
        
        //Output results to text area
        this.outputTextArea.setText(this.outputTextArea.getText()+
                "The simulated probability of Exp(.2) has a mean between 3 and 5 is "+probabilityBetweenThreeAndFive+"\n"+
                "The mean of 400 means taken from 625 samples of Exp(.2) is "+meanOfMeans+"\n"+
                "The standard devation of the means of Exp(.2) is "+stdDevMeans+"\n\n");
        
        //Draw histogram of means
        ((HistogramPanel)this.histogramPanel).drawHistogram(
                Integer.parseUnsignedInt(this.numberOfClassesTextField.getText()), exponentialMeans);
    }//GEN-LAST:event_runExpButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatsFrame().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel histogramPanel;
    private javax.swing.JLabel numberOfClassesLabel;
    private javax.swing.JTextField numberOfClassesTextField;
    private javax.swing.JScrollPane outputScrollPane;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JButton runExpButton;
    private javax.swing.JButton runUniformButton;
    // End of variables declaration//GEN-END:variables
}
